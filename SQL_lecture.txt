data type:
INT(INTEGER)
DECIMAL(NUMERIC)
DATE
VARCHAR
---------------------------------------------
описание ключевого поля - INT PRIMARY KEY AUTO_INCREMENT (Это значит, что в поле
 будут заноситься различные целые числа, при этом они будут автоматически генерироваться
 (каждая следующая строка будет иметь значение ключа на 1 больше предыдущего).
----------------------------------------------
Создание таблицы:
CREATE TABLE genre(
    genre_id INT PRIMARY KEY AUTO_INCREMENT,
    name_genre VARCHAR(30)
);
Поле	    Тип, описание
genre_id	INT PRIMARY KEY AUTO_INCREMENT
name_genre	VARCHAR(30)
----------------------------------------------------
Вставка записи в таблицу
Для занесения новой записи в таблицу используется SQL запрос, в котором указывается
 в какую таблицу, в какие поля заносить новые значения. Структура запроса:
ключевые слова INSERT INTO (ключевое слово INTO можно пропустить);
имя таблицы, в которую добавляется запись;
открывающая круглая скобка «(»;
 список полей через запятую, в которые следует занести новые данные;
закрывающая скобка «)»;
ключевое слово VALUES;
открывающая круглая скобка «(»;
список значений через запятую, которые заносятся в соответствующие поля, при этом
текстовые значения заключаются в кавычки, числовые значения записываются без кавычек,
в качестве разделителя целой и дробной части используется точка;
закрывающая скобка «)».

INSERT INTO таблица(поле1, поле2)
VALUES (значение1, значение2);

Чтобы увидеть как именно выглядит таблица genre, можно добавить SQL запрос,
который выберет все записи из таблицы:

SELECT * FROM genre;

---------------------------------------------------------
Выборка отдельных столбцов
Для того чтобы отобрать данные из определенных столбцов таблицы используется SQL
запрос следующей структуры:

ключевое слово SELECT ;
список столбцов таблицы через запятую;
ключевое слово FROM ;
имя таблицы.
Результатом является таблица, в которую включены все данные из указанных после SELECT
столбцов исходной таблицы.

SELECT title, amount FROM book;

------------------------------------------------------------------
Присвоение новых имен столбцам при формировании выборки

SELECT title AS Название, amount
FROM book;

-----------------------------------------------------------------------
Выборка данных с созданием вычисляемого столбца

SELECT title, author, price, amount,
     price * amount AS total
FROM book;

__________________________________________________________________
Выборка данных, вычисляемые столбцы, математические функции
Функция	                       Описание	                                        Пример
CEILING(x)	возвращает наименьшее целое число, большее или равное x
(округляет до целого числа в большую сторону)	                          CEILING(4.2)=5
                                                                          CEILING(-5.8)=-5
ROUND(x, k)	округляет значение x до k знаков после запятой,
если k не указано – x округляется до целого	                              ROUND(4.361)=4
                                                                          ROUND(5.86592,1)=5.9
FLOOR(x)	возвращает наибольшее целое число, меньшее или равное x
(округляет до  целого числа в меньшую сторону)	                          FLOOR(4.2)=4
                                                                          FLOOR(-5.8)=-6
POWER(x, y)	возведение x в степень y	                                  POWER(3,4)=81.0
SQRT(x)	квадратный корень из x	                                          SQRT(4)=2.0
                                                                          SQRT(2)=1.41...
DEGREES(x)	конвертирует значение x из радиан в градусы	                  DEGREES(3) = 171.8...
RADIANS(x)	конвертирует значение x из градусов в радианы	              RADIANS(180)=3.14...
ABS(x)	модуль числа x	                                                  ABS(-1) = 1
                                                                          ABS(1) = 1
PI()	                                                                  pi = 3.1415926...
----------------------------------------------------------------------
Выборка данных, вычисляемые столбцы, логические функции

SELECT title, amount, price,
    IF(amount<4, price*0.5, price*0.7) AS sale
FROM book;

-----------------------------------------------------------------------
Выборка данных по условию
Логическое выражение может включать операторы сравнения (равно «=», не равно «<>», больше «>»,
 меньше «<», больше или равно«>=», меньше или равно «<=») и выражения, допустимые в SQL.

SELECT title, price
FROM book
WHERE price < 600;

-----------------------------------------------------------------------------
Выборка данных, логические операции
Логическое выражение после ключевого слова WHERE кроме операторов сравнения
и выражений может включать  логические операции (И «and», ИЛИ «or», НЕ «not»)
и круглые скобки, изменяющие приоритеты выполнения операций.

Приоритеты операций:

круглые скобки
умножение  (*),  деление (/)
сложение  (+), вычитание (-)
операторы сравнения (=, >, <, >=, <=, <>)
NOT
AND
OR
_________________________________________________________________
Выборка данных, операторы BETWEEN, IN

SELECT title, amount
FROM book
WHERE amount BETWEEN 5 AND 14;
_________________________________________________________________________
Выборка данных с сортировкой
Чтобы управлять направлением сортировки вручную, после имени столбца указывается
ключевое слово ASC (по возрастанию) или DESC (по убыванию).
Столбцы после ключевого слова ORDER BY можно задавать:
названием столбца;
номером столбца;
именем столбца (указанным после AS).

SELECT title, author, price
FROM book
ORDER BY title;

Можно использовать другие варианты записи запроса:

SELECT author, title, amount AS Количество
FROM book
WHERE price < 750
ORDER BY author, Количество DESC;

SELECT author, title, amount AS Количество
FROM book
WHERE price < 750
ORDER BY 1, 3 DESC;
__________________________________________________________________________________
Выборка данных, оператор LIKE
Символ-шаблон	            Описание	                     Пример
%	                 Любая строка, содержащая ноль
                     или более символов	                   SELECT * FROM book
                                                           WHERE author LIKE '%М.%'
                                                            выполняет поиск и выдает все книги,
                                                            инициалы авторов которых содержат «М.»
_ (подчеркивание)	  Любой одиночный символ	           SELECT * FROM book
                                                           WHERE title LIKE 'Поэм_'
                                                            выполняет поиск и выдает все книги,
                                                            названия которых либо «Поэма», либо «Поэмы» и пр.

SELECT title
FROM book
WHERE title LIKE 'Б%';
/* эквивалентное условие
title LIKE 'б%'
*/
--------------------------------------------------------------------------------
Выбор уникальных элементов столбца

SELECT DISTINCT author
FROM book;

SELECT  author
FROM book
GROUP BY author;
________________________________________________________________________
Выборка данных, групповые функции SUM и COUNT

SELECT author, sum(amount), count(amount)
FROM book
GROUP BY author;

------------------------------------------------------------------
Выборка данных, групповые функции MIN, MAX и AVG

SELECT author, MIN(price) AS min_price
FROM book
GROUP BY author;
-------------------------------------------------------------------
Выборка данных c вычислением, групповые функции

SELECT author, SUM(price * amount) AS Стоимость
FROM book
GROUP BY author;
_______________________________________________________________________
Выборка данных по условию, групповые функции

SELECT author,
    MIN(price) AS Минимальная_цена,
    MAX(price) AS Максимальная_цена
FROM book
GROUP BY author
HAVING SUM(price * amount) > 5000;
________________________________________________________________________
Выборка данных по условию, групповые функции, WHERE и HAVING

порядок выполнения  SQL запроса на выборку на СЕРВЕРЕ:

FROM
WHERE
GROUP BY
HAVING
SELECT
ORDER BY
__________________________________________________________________________
Использование вложенного запроса в выражении

SELECT title, author, amount
FROM book
WHERE ABS(amount - (SELECT AVG(amount) FROM book)) >3;
__________________________________________________________________________
Вложенный запрос, оператор IN

WHERE имя_столбца IN (вложенный запрос, возвращающий один столбец)

SELECT title, author, amount, price
FROM book
WHERE author IN (
        SELECT author
        FROM book
        GROUP BY author
        HAVING SUM(amount) >= 12
      );
________________________________________________________________________
Вложенный запрос, операторы ANY и ALL

SELECT title, author, amount, price
FROM book
WHERE amount < ALL (
        SELECT AVG(amount)
        FROM book
        GROUP BY author
      );
_______________________________________________________________________
Вложенный запрос после SELECT

SELECT title, author, amount,
    (
     SELECT AVG(amount)
     FROM book
    ) AS Среднее_количество
FROM book
WHERE abs(amount - (SELECT AVG(amount) FROM book)) >3;
____________________________________________________________________________
Запросы на обновление

UPDATE таблица SET поле = выражение
где
таблица – имя таблицы, в которой будут проводиться изменения;
поле – поле таблицы, в которое будет внесено изменение;
выражение – выражение,  значение которого будет занесено в поле.

UPDATE book
SET price = 0.7 * price;

SELECT * FROM book;

UPDATE book
SET price = 0.7 * price
WHERE amount < 5;

SELECT * FROM book;
____________________________________________________________________________
Запросы на обновление нескольких столбцов

UPDATE таблица SET поле1 = выражение1, поле2 = выражение2

UPDATE book
SET amount = amount - buy,
    buy = 0;

SELECT * FROM book;
_______________________________________________________________________
Запросы на обновление нескольких таблиц

UPDATE book, supply
SET book.amount = book.amount + supply.amount
WHERE book.title = supply.title AND book.author = supply.author;

SELECT * FROM book;
_________________________________________________________________________
Запросы на удаление

DELETE FROM таблица;

DELETE FROM supply;

SELECT * FROM supply;

DELETE FROM таблица
WHERE условие;
___________________________________________________________________________
Запросы на создание таблицы

CREATE TABLE имя_таблицы AS
SELECT ...

CREATE TABLE ordering AS
SELECT author, title, 5 AS amount
FROM book
WHERE amount < 4;

SELECT * FROM ordering;
_____________________________________________________________________________

